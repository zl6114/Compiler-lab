zl6114 : Fetching repo
zl6114 : Checking out branch lab1-hard if it exists...
Already on 'lab1-hard'
M	1-regexes/a/test_lexer.sh
zl6114 : Forcing branch back to hash 3d1c5f08eb5d4fdf0017fa058df971675059c6a6
HEAD is now at 3d1c5f0 better version of b
zl6114 : Checking we're on branch lab1-hard
cd ${REPOS}/$U && git rev-parse --abbrev-ref HEAD
zl6114 : Checking we're on the right hash 3d1c5f08eb5d4fdf0017fa058df971675059c6a6...
cd ${REPOS}/$U && git rev-parse $RUN

mkdir -p $LOGDIR/1-regexes

do_or_die "Overwriting test inputs with ones from spec." \
    cp $SCRATCH/spec/1-regexes/a/test/in/??.txt $REPO/1-regexes/a/test/in
zl6114 : Overwriting test inputs with ones from spec.

do_or_die "Overwriting test outputs with ones from spec." \
    cp $SCRATCH/spec/1-regexes/a/test/ref/??.stdout.txt $REPO/1-regexes/a/test/ref
zl6114 : Overwriting test outputs with ones from spec.

do_or_die "Overwriting test_lexer.sh with one from spec." \
    cp $SCRATCH/spec/1-regexes/a/test_lexer.sh $REPO/1-regexes/a/test_lexer.sh
zl6114 : Overwriting test_lexer.sh with one from spec.

do_or_die "Ensuring test_lexer.sh is executable." \
    chmod u+x $REPO/1-regexes/a/test_lexer.sh
zl6114 : Ensuring test_lexer.sh is executable.


log_msg "########################################################"
zl6114 : ########################################################
log_msg "## Part 1"
zl6114 : ## Part 1

log_msg "Part 1 : Removing any existing binary"
zl6114 : Part 1 : Removing any existing binary
(cd $REPO/1-regexes/a && rm histogram)

log_msg "Part 1 : Running test"
zl6114 : Part 1 : Running test
(cd $REPO/1-regexes/a && ./test_lexer.sh) | tee $LOGDIR/1-regexes/part-a.log
========================================
 Cleaning the temporaries and outputs
rm histogram histogram.exe
rm: cannot remove 'histogram': No such file or directory
rm: cannot remove 'histogram.exe': No such file or directory
make: [clean] Error 1 (ignored)
makefile:10: recipe for target 'clean' failed
rm *.yy.cpp
rm test/out/*
 Force building histogram
flex -o histogram_lexer.yy.cpp  histogram_lexer.flex
g++ -W -Wall -g -std=gnu++11 -o histogram  histogram_lexer.yy.cpp histogram_main.cpp
histogram_lexer.flex: In function ‘int yylex()’:
histogram_lexer.flex:30:39: warning: too many arguments for format [-Wformat-extra-args]
 \n       { fprintf(stderr, "Newline\n", *yytext); }
                                       ^
histogram_lexer.yy.cpp: In function ‘int yy_get_next_buffer()’:
histogram_lexer.yy.cpp:1053:44: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  if ((int) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
                                            ^
histogram_lexer.yy.cpp: At global scope:
histogram_lexer.yy.cpp:1129:17: warning: ‘void yyunput(int, char*)’ defined but not used [-Wunused-function]
     static void yyunput (int c, char * yy_bp )
                 ^

=========================================
===========================

Input file : test/in/01.txt
===========================

Input file : test/in/02.txt
===========================

Input file : test/in/03.txt
===========================

Input file : test/in/04.txt
===========================

Input file : test/in/05.txt
===========================

Input file : test/in/06.txt
===========================

Input file : test/in/07.txt
===========================

Input file : test/in/08.txt
===========================

Input file : test/in/09.txt
===========================

Input file : test/in/10.txt
===========================

Input file : test/in/11.txt
===========================

Input file : test/in/12.txt
===========================

Input file : test/in/13.txt
===========================

Input file : test/in/14.txt
===========================

Input file : test/in/15.txt
===========================

Input file : test/in/16.txt
===========================

Input file : test/in/17.txt
===========================

Input file : test/in/18.txt
===========================

Input file : test/in/19.txt
===========================

Input file : test/in/20.txt
===========================

Input file : test/in/21.txt
===========================

Input file : test/in/22.txt
===========================

Input file : test/in/23.txt
===========================

Input file : test/in/24.txt
===========================

Input file : test/in/25.txt
===========================

Input file : test/in/26.txt
===========================

Input file : test/in/27.txt
########################################
Passed 27 out of 27.


PA_TOTAL=27
get_passed "PA_PASSED" ${PA_TOTAL} $LOGDIR/1-regexes/part-a.log || exit 1
grep -E "$MATCH_RE" "$FILE" 
PA_PASSED=27



log_msg "########################################################"
zl6114 : ########################################################
log_msg "## Part 2"
zl6114 : ## Part 2

log_msg "Part 2 : Removing any existing binary"
zl6114 : Part 2 : Removing any existing binary
(cd $REPO/1-regexes/b && rm regex_substitute)

log_msg "Part 2 : Attempting to build regex_substitute"
zl6114 : Part 2 : Attempting to build regex_substitute
(cd $REPO/1-regexes/b && make regex_substitute)
g++  -std=c++11 -W -Wall -g    regex_substitute.cpp   -o regex_substitute
regex_substitute.cpp:6:14: warning: unused parameter ‘argc’ [-Wunused-parameter]
 int main(int argc, char *argv[])
              ^

PB_TOTAL=5
if [[ -f $REPO/1-regexes/b/regex_substitute ]]; then
    scripts/lab1-hard-b.sh "$SCRATCH" "$REPO" "$U" "$LOGDIR" | tee $LOGDIR/1-regexes/part-b.log

    get_passed "PB_PASSED" ${PB_TOTAL} $LOGDIR/1-regexes/part-b.log || exit 1
else
    log_msg "Part 2 : No binary built"
    PB_PASSED=0;
fi
===========================
Test test1
----------------------------------
s/[^0-9]*([0-9]+)[^0-9]([0-9]+).*/\1,\2/g
Test case test1 : Pass
===========================
Test test2
----------------------------------
s/x(aaa[a-z])x/\1\1/g
Test case test2 : Pass
===========================
Test test3
----------------------------------
s/adfg|z( )( ?)[a-z]/\1\1 fss ss \1/g
Test case test3 : Pass
===========================
Test test4
----------------------------------
s/First[^a-z]*([a-z][a-z0-9]*).*[.]pdf/\1.pdf/g
Test case test4 : Pass
===========================
Test test5
----------------------------------
s/(.)(.)(.)(.)/\2\3 \1 \4/g
Test case test5 : ERROR
########################################
Passed 4 out of 5.

grep -E "$MATCH_RE" "$FILE" 
PB_PASSED=4


log_msg "########################################################"
zl6114 : ########################################################
log_msg "## Part 3"
zl6114 : ## Part 3


log_msg "Part 3 : Removing any existing binary"
zl6114 : Part 3 : Removing any existing binary
(cd $REPO/1-regexes/c && rm bin/regex_engine)
rm: cannot remove 'bin/regex_engine': No such file or directory

log_msg "Part 3 : Attempting to build bin/regex_engine"
zl6114 : Part 3 : Attempting to build bin/regex_engine
(cd $REPO/1-regexes/c && make bin/regex_engine)
make: *** No rule to make target 'bin/regex_engine'.  Stop.

PC_TOTAL=15;
if [[ -f $REPO/1-regexes/c/bin/regex_engine ]]; then
    scripts/lab1-hard-c.sh "$SCRATCH" "$REPO" "$U" "$LOGDIR" | tee $LOGDIR/1-regexes/part-c.log

    get_passed "PC_PASSED" ${PC_TOTAL} $LOGDIR/1-regexes/part-c.log  || exit 1
else
    log_msg "Part 3 : No binary built"
    PC_PASSED=0;
fi
zl6114 : Part 3 : No binary built


#######################################################################
##

(cd $LOGDIR && tar -czf 1-regexes.tar.gz 1-regexes/)

PA_PERCENT=$(nodejs -pe "(100 * ( $PA_PASSED / $PA_TOTAL )).toFixed(2)" );
nodejs -pe "(100 * ( $PA_PASSED / $PA_TOTAL )).toFixed(2)" 
PB_PERCENT=$(nodejs -pe "(100 * ( $PB_PASSED / $PB_TOTAL )).toFixed(2)" );
nodejs -pe "(100 * ( $PB_PASSED / $PB_TOTAL )).toFixed(2)" 
PC_PERCENT=$(nodejs -pe "(100 * ( $PC_PASSED / $PC_TOTAL )).toFixed(2)" );
nodejs -pe "(100 * ( $PC_PASSED / $PC_TOTAL )).toFixed(2)" 

PERCENT=$(nodejs -pe "(0.6 * $PA_PERCENT + 0.2 * $PB_PERCENT + 0.2 * $PC_PERCENT).toFixed(2)")
nodejs -pe "(0.6 * $PA_PERCENT + 0.2 * $PB_PERCENT + 0.2 * $PC_PERCENT).toFixed(2)"

echo "$U, lab1, part-a, ${PA_PERCENT}" > $LOGDIR/1-regexes/results.csv
echo "$U, lab1, part-b, ${PB_PERCENT}" >> $LOGDIR/1-regexes/results.csv
echo "$U, lab1, part-c, ${PC_PERCENT}" >> $LOGDIR/1-regexes/results.csv
echo "$U, lab1, overall, ${PERCENT}" >> $LOGDIR/1-regexes/results.csv

log_msg ""
zl6114 : 
log_msg ""
zl6114 : 
log_msg "########################################################"
zl6114 : ########################################################
log_msg "## Summary "
zl6114 : ## Summary 

log_msg "Part A (60%) : $PA_PERCENT% ($PA_PASSED / $PA_TOTAL)";
zl6114 : Part A (60%) : 100.00% (27 / 27)
log_msg "Part B (20%) : $PB_PERCENT% ($PB_PASSED / $PB_TOTAL)";
zl6114 : Part B (20%) : 80.00% (4 / 5)
log_msg "Part C (20%) : $PC_PERCENT% ($PC_PASSED / $PC_TOTAL)";
zl6114 : Part C (20%) : 0.00% (0 / 15)

log_msg "Overall      : $PERCENT"
zl6114 : Overall      : 76.00



exit 0
zl6114 : Test Complete
